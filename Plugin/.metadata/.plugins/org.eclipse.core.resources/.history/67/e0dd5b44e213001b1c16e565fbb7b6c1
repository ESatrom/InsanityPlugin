package me.Minecraftmage113.InsanityPlugin.helpers;

import org.bukkit.Material;
import org.bukkit.World;
import org.bukkit.block.Block;
import org.bukkit.block.BlockFace;

public class Structure {
	int xOffset, yOffset, zOffset;
	Block origin;
	Material[][][] structure; // {height{depth{width}}}
	public Structure(int xOffset, int yOffset, int zOffset, Block origin, Material[][][] structure) {
		this.xOffset = xOffset;
		this.yOffset = yOffset;
		this.zOffset = zOffset;
		this.origin = origin;
		this.structure = structure;
	}
	public void setOrigin(Block origin) {
		this.origin = origin;
	}
	public boolean test() {
		//structure read as {height{depth{width}}}
		return false;
	}
	public void build(BlockFace facing) { //TODO make it return a list of replaced blocks || make it fail if it attempts to replace blocks.
		World w = origin.getWorld();
		int x = origin.getX()+xOffset;
		int y = origin.getY()+yOffset;
		int z = origin.getZ()+zOffset;
		int dzWidth = 0,
			dzDepth = 0,
			dxWidth = 0,
			dxDepth = 0;
		switch(facing) {
		case NORTH: //subtract depth from z, add width to x
			dzDepth = -1;
			dxWidth = 1;
			break;
		case EAST: //add depth to x, add width to z
			dxDepth = 1;
			dzWidth = 1;
			break;
		case SOUTH: //add depth to z, subtract width from x
			dzDepth = 1;
			dxWidth = -1;
			break;
		case WEST: //subtract depth from x,  subtract width from z
			dxDepth = -1;
			dzWidth = -1;
			break;
		default:
			break;
		}
		for(int height = 0; height < structure.length; height++) {
			for(int depth = 0; depth < structure[height].length; depth++) {
				for(int width = 0; width < structure[height][depth].length; width++) {
					if(structure[height][depth][width]!=null) {
						w.getBlockAt(x+(width*dxWidth)+(depth*dxDepth), y+height, z+(width*dzWidth)+(depth*dzDepth)).setType(structure[height][depth][width]);
					}
				}
			}
		}
	}
}
