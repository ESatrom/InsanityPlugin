package me.Minecraftmage113.InsanityPlugin.helpers;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import org.bukkit.World;
import org.bukkit.block.Block;

import me.Minecraftmage113.InsanityPlugin.Main;

public class Saver {
	Main plugin;
	File path;
	Scanner scan;
	Encoder encoder;
	String[] metaKeys = {"Altar", "manMade"};
	List<Block> blocks = new ArrayList<Block>();
	final String endBlockFile = "CelestialBlocks.txt", netherBlockFile = "InfernalBlocks.txt", normalBlockFile = "TerrestrialBlocks.txt", endSequence = "§|§", breakSequence = "\n";
	public Saver(Main plugin) {
		this.plugin = plugin;
		encoder = new Encoder(plugin, metaKeys);
		this.path = plugin.getDataFolder();
	}
	public void save() {
		System.out.println("Save initiated");
		saveBlocks();
	}
	public void load() {
		System.out.println("Load initiated");
		loadBlocks();
	}
	
	public void addBlock(Block b) { blocks.add(b); }
	public boolean removeBlock(Block b) { return blocks.remove(b); }
	
	@SuppressWarnings("deprecation")
	public void saveBlocks() {
		System.out.println("Block Save initiated");
		File endFile = new File(path.getPath()+endBlockFile); //ID 1
		File netherFile = new File(path.getPath()+netherBlockFile); //ID -1
		File overworldFile = new File(path.getPath()+normalBlockFile); //ID 0
		System.out.println("File paths created");
		FileWriter end, nether, overworld;
		try {
			endFile.delete();
			netherFile.delete();
			overworldFile.delete();
			endFile.createNewFile();
			netherFile.createNewFile();
			overworldFile.createNewFile();
			System.out.println("File targets created");
		} catch (IOException e) {
			for(int i = 0; i < 50; i++) {
				System.out.println("Unknown error has occured!");
			}
		}
		try {
			end = new FileWriter(endFile);
			nether = new FileWriter(netherFile);
			overworld = new FileWriter(overworldFile);
			System.out.println("Files targeted");
			for(Block b : blocks) {
				List<String> segments = encoder.blockToString(b);
				System.out.println("Saving block: " + encoder.blockToString(b) + " to world " + b.getWorld().getEnvironment().getId());
				if(b.getWorld().getEnvironment().getId()==1) {
					for(String s : segments) {
						end.write(s+breakSequence);
					}
					System.out.println("Block written to end");
					end.write(endSequence);
				} else if(b.getWorld().getEnvironment().getId()==-1) {
					for(String s : segments) {
						nether.write(s+breakSequence);
					}
					System.out.println("Block written to hell");
					nether.write(endSequence);
				} else {
					for(String s : segments) {
						overworld.write(s+breakSequence);
					}
					System.out.println("Block written to earth");
					overworld.write(endSequence);
				}
			}
			System.out.println("Blocks written");
			end.close();
			nether.close();
			overworld.close();
			System.out.println("Writers closed");
		} catch (IOException e) {
			System.out.println("File not made?");
		}
		System.out.println("save complete");
	}

	@SuppressWarnings("deprecation")
	public void loadBlocks() {
		System.out.println("Block Load initiated");
		List<Block> Bs = new ArrayList<Block>();
		Scanner end, nether, overworld;
		try {
			end = new Scanner(new File(path.getPath()+endBlockFile));
			nether = new Scanner(new File(path.getPath()+netherBlockFile));
			overworld = new Scanner(new File(path.getPath()+normalBlockFile));
		} catch (FileNotFoundException e) {
			System.out.println("Big bad error has occured");
			return;
		}
		System.out.println("Scanners initiated");
		World endWorld = null, netherWorld = null, terraWorld = null;
		for(World w : plugin.getServer().getWorlds()) {
			System.out.println("Found world: " + w.getEnvironment().getId());
			switch(w.getEnvironment().getId()) {
			case -1:
				netherWorld = w;
				break;
			case 0:
				terraWorld = w;
				break;
			case 1:
				endWorld = w;
				break;
			}
		}
		System.out.println("Worlds initiated");
		loadWorld(end, endWorld, Bs);
		loadWorld(nether, netherWorld, Bs);
		loadWorld(overworld, terraWorld, Bs);
		System.out.println("Load finished");
		end.close();
		nether.close();
		overworld.close();
		System.out.println("Scanners closed");
		blocks = Bs;
		System.out.println("Blocks updated: " + blocks + "\n\n" + Bs);
	}
	
	public void loadWorld(Scanner scan, World world, List<Block> Bs) {
		while(scan.hasNext()) {
			List<String> block = new ArrayList<String>();
			String temp = scan.nextLine();
			if(temp.length()>=3&&temp.substring(0, 3).equals(endSequence)) {
				System.out.println("sequence bigness: " + endSequence.length());
				System.out.println("item bigness: " + temp.length());
				System.out.println("Block read - " + temp.substring(endSequence.length()+1));
				Bs.add(encoder.loadBlockFromString(block, world));
				block = new ArrayList<String>();
				block.add(temp.substring(endSequence.length()+1));
			} else {
				System.out.println("String read - " + temp);
				block.add(temp);
			}
		}
	}
}
